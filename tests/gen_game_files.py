#!/usr/bin/python3
# Generated by ChatGPT

import os, sys, shutil
import random

IMPORTANT_FOLDERS = [
    "assets", "audio", "maps", "scripts", "ui"
]

FOLDER_NAMES = [
    "textures", "sprites", "environment", "items", "npcs", "monsters", "levels",
    "config", "data", "shaders", "models", "music", "sounds", "fonts"
]

FILE_NAMES = [
    "player", "enemy", "boss", "grass", "tree", "rock", "fireball", "sword",
    "spell", "village", "castle", "inventory", "menu", "pause", "quest",
    "dragon", "goblin", "orc", "shader", "terrain", "ambient", "battle", "credits",
    "options", "controller", "input", "soundtrack", "loader", "savefile"
]

FILE_EXTENSIONS = [
    ".png", ".jpg", ".ogg", ".wav", ".mp3", ".txt", ".json", ".bin", ".dat",
    ".mesh", ".mat", ".shader", ".lua", ".py", ".cfg", ".dll", ".exe"
]

def generate_fake_game_files(
    base_folder,
    num_files=50,
    min_size_kb=10,
    max_size_kb=500,
    max_depth=3
):
    if os.path.exists(base_folder):
        shutil.rmtree(base_folder)

    # Track filenames inside each folder
    folder_file_counts = {}

    for _ in range(num_files):
        depth = random.randint(0, max_depth)

        subdirs = []
        if depth > 0:
            subdirs.append(random.choice(IMPORTANT_FOLDERS))
            for _ in range(depth - 1):
                subdirs.append(random.choice(FOLDER_NAMES))

        folder_path = os.path.join(base_folder, *subdirs)
        

        if folder_path not in folder_file_counts:
            folder_file_counts[folder_path] = {}

        # Choose a base name and extension
        base_name = random.choice(FILE_NAMES)
        extension = random.choice(FILE_EXTENSIONS)

        # Check for duplicates
        file_counter = folder_file_counts[folder_path].get((base_name, extension), 0)
        if file_counter == 0:
            filename = f"{base_name}{extension}"
        else:
            filename = f"{base_name}_{file_counter}{extension}"

        # Update counter
        folder_file_counts[folder_path][(base_name, extension)] = file_counter + 1

        filepath = os.path.join(folder_path, filename)

        size_kb = random.randint(min_size_kb, max_size_kb)
        # size_bytes = size_kb
        size_bytes = size_kb * 1024

        os.makedirs(os.path.dirname(filepath), exist_ok=True)
        with open(filepath, "wb") as f:
            f.write(os.urandom(size_bytes))

    print(f"Generated {num_files} fake game files in '{base_folder}'.")

if __name__ == "__main__":

    generate_fake_game_files(sys.argv[1], num_files=int(sys.argv[2]))
    exit(0)